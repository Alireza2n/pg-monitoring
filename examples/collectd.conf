# An examplary collectd configuration that uses some monitoring queries
LoadPlugin postgresql
<Plugin postgresql>
    <Query tables_cache_hit>
        Statement "SELECT relname, 100 * heap_blks_hit :: FLOAT / (heap_blks_hit + heap_blks_read) AS cache_hit_pct FROM pg_statio_user_tables;"
        <Result>
            Type gauge
            InstancePrefix "tables_io"
            InstancesFrom "relname"
            ValuesFrom "cache_hit_pct"
        </Result>
    </Query>

    <Query tables_disk_size>
        Statement "SELECT nspname || '.' || relname AS relation,\
                          pg_total_relation_size(cl.oid) AS total_size \
                     FROM pg_class cl \
                     LEFT JOIN pg_namespace n ON (n.oid = cl.relnamespace) \
                    WHERE nspname NOT IN ('pg_catalog', 'information_schema') \
                      AND cl.relkind <> 'i' \
                      AND nspname !~ '^pg_toast' \
                    ORDER BY pg_total_relation_size(cl.oid) DESC \
                    LIMIT 20;"
        <Result>
            Type gauge
            InstancePrefix "tables_disk"
            InstancesFrom "relation"
            ValuesFrom "total_size"
        </Result>
    </Query>

    <Query locks_conn_count>
        Statement "SELECT COUNT(DISTINCT pid) AS count FROM pg_locks WHERE NOT GRANTED;"
        <Result>
            Type counter
            InstancePrefix "locked_conn"
            ValuesFrom "count"
        </Result>
    </Query>

    <Query locks_relation_count>
        Statement "SELECT relation::regclass AS relname, \
                          COUNT(DISTINCT pid) AS count \
                     FROM pg_locks WHERE NOT GRANTED \
                     GROUP BY 1;"
        <Result>
            Type counter
            InstancePrefix "locked_conn"
            InstancesFrom "relname"
            ValuesFrom "count"
        </Result>
    </Query>

    <Query locks_statement_duration>
        Statement "SELECT a.query AS blocking_statement, EXTRACT('epoch' FROM NOW() - a.query_start) AS blocking_duration \
                     FROM pg_locks bl JOIN pg_stat_activity a \
                       ON a.pid = bl.pid \
                    WHERE NOT bl.GRANTED;"
        <Result>
            Type gauge
            InstancePrefix "locking_stmt_duration"
            InstancesFrom "blocking_statement"
            ValuesFrom "blocking_duration"
        </Result>
    </Query>

    <Database example>
        Host "0.0.0.0"
        Port "5432"
        User "example"
        Password "example"
        Query tables_cache_hit
        Query tables_disk_size
        Query locks_conn_count
        Query locks_relation_count
        Query locks_statement_duration
    </Database>
</Plugin>
